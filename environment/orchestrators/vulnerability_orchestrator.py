from .orchestrator import Orchestrator, OrcehstratorTask


# Vulnerability Orchestrator
class VulnerabilityOrchestrator(Orchestrator):
    def __init__(self, ansible_runner) -> None:
        super().__init__(ansible_runner, "vulnerabilities/")

    def add_ftpAccess(self, host: str):
        self.add_task(OrcehstratorTask(host, "FTPAccess"))

    def add_netcatShell(self, host: str):
        self.add_task(OrcehstratorTask(host, "NetcatShell"))

    def add_nostromoRCE(self, host: str):
        self.add_task(OrcehstratorTask(host, "NostromoRCE"))

    def add_rsync(self, host: str):
        self.add_task(OrcehstratorTask(host, "rsync"))

    def add_sshAuthorizedKeysPersistence(self, host: str):
        self.add_task(OrcehstratorTask(host, "sshAuthorizedKeysPersistence"))

    def add_sshEnablePasswordLogin(self, host: str):
        self.add_task(OrcehstratorTask(host, "sshEnablePasswordLogin"))

    def add_vsftpdBackdoor(self, host: str):
        self.add_task(OrcehstratorTask(host, "/vsftpdBackdoor/vsftpd234Backdoor"))

    def add_weakUserPassword(self, host: str, user: str):
        vuln = OrcehstratorTask(host, "weakUserPassword")
        vuln.set_params({"user": user})
        self.add_task(vuln)

    def add_writeablePassword(self, host: str):
        self.add_task(OrcehstratorTask(host, "writeablePasswd"))

    def add_writeableSudoers(self, host: str):
        self.add_task(OrcehstratorTask(host, "writeableSudoers"))

    def run_vsftpdBackdoor(self, host: str):
        # requires vsftpdBackdoor to be added first
        self.add_task(OrcehstratorTask(host, "vsftpdBackdoorRun"))
