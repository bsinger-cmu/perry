import argparse
from AnsibleRunner import AnsibleRunner
from os import getcwd, chmod, listdir
from os.path import exists
import cage_simulation
import stat

def install_vuln(target_ip, ssh_key, yml_cmd, ansible_dir):
    #Setup connection to openstack
    conn = cage_simulation.initialize()
    _, manage_ip = cage_simulation.find_manage_server(conn)

    # Initialize ansible
    ansible_runner = AnsibleRunner(ssh_key, manage_ip, ansible_dir)

    params = {'host': target_ip}
    r = ansible_runner.run_playbook(yml_cmd, playbook_params=params)

if __name__ == "__main__":
    v_dir = "vulnerabilities"
    ansible_path = "ansible"
    parser = argparse.ArgumentParser()

    parser.add_argument('-t', '--target_ip', help = 'IP address of target machine', required = True)
    parser.add_argument('-s', '--ssh_key', help = 'The path to your openstack ssh key', required = True)
    args = parser.parse_args()

    vuln_options = listdir(f"{ansible_path}/{v_dir}")

    while 1:
        print("\n-----List of Installable Vulnerabilities-----")
        print("ID\tOption")
        for i in range(len(vuln_options)):
            if vuln_options[i].endswith('.yml'):
                print(f"{i + 1}.\t{vuln_options[i].split('.')[0]}")
        try:
            choice_inp = int(input("Enter choice (by ID): ")[0])
            if(choice_inp > len(vuln_options)) or (choice_inp < 1):
                print("Exiting...")
                exit(0)
            install_vuln(args.target_ip, args.ssh_key, f"{v_dir}/{vuln_options[choice_inp - 1]}", ansible_path)
        except (EOFError, ValueError):
            print("Exiting...")
            exit(0)

