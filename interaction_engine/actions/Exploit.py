from .Action import Action
from openstack_helper_functions.network_helpers import servers_ips_on_subnet

class Exploit(Action):
    def __init__(self):
        self.foothold = None
        self.target_host = None

    def set_target_to_exploit(self, target_host, foothold="default_management_host"):
        self.foothold = foothold
        self.target_host = subnet

    def run(self, env):
        if self.target_host is not None:
            return "credential"
        else:
            raise Exception('No subnet is set to scan')

class MetasploitExploit(Exploit):
    def set_metasploit_params(self, exploit="", LHOST="", TARGET="", PAYLOAD=""):
        self.exploit = exploit
        self.LHOST = LHOST
        self.TARGET = TARGET
        self.PAYLOAD = PAYLOAD

    def run(self, env):
        # TODO: 1. connect to foothold host
        conn = openstackAPI.initialize()
        manage_server, manage_ip = openstackAPI.find_manage_server(conn)
        # TODO: 2. execute following commands on foothold
        ansible_data_dir = '../ansible/cage/'
        ansible_vars_default = {'manage_ip': manage_ip, 'ssh_key_path': args.ssh_key_path}
        output = run_bash_command(ansible_vars_default, ansible_data_dir, 'msfconsole -q')
        #   msfconsole -q
        #   use exploit/windows/dce
        #   set LHOST
        #   show
        #   set TARGET
        #   set PAYLOAD windows/shell/
        #   exp
        pass