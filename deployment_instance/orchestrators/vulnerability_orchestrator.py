from .orchestrator import Orchestrator, OrchestrationTask

    
# Vulnerability Orchestrator
class VulnerabilityOrchestrator(Orchestrator):
    def __init__(self, ansible_runner) -> None:
        super().__init__(ansible_runner, "vulnerabilities/")

    def print_addvuln(self, host, vuln):
        print("\nAdding Vulnerability %s to %s" % (vuln, host))

    def add_ftpAccess(self, host: str):
        self.print_addvuln(host, "FTPAccess")
        self.add_task(OrchestrationTask(host, "FTPAccess"))

    def add_netcatShell(self, host: str):
        self.print_addvuln(host, "NetcatShell")
        self.add_task(OrchestrationTask(host, "NetcatShell"))
    
    def add_nostromoRCE(self, host: str):
        self.print_addvuln(host, "NostromoRCE")
        self.add_task(OrchestrationTask(host, "NostromoRCE"))

    def add_rsync(self, host: str):
        self.print_addvuln(host, "Rsync")
        self.add_task(OrchestrationTask(host, "rsync"))

    def add_sshAuthorizedKeysPersistence(self, host: str):
        self.print_addvuln(host, "sshAuthorizedKeysPersistence")
        self.add_task(OrchestrationTask(host, "sshAuthorizedKeysPersistence"))
    
    def add_sshEnablePasswordLogin(self, host: str):
        self.print_addvuln(host, "sshEnablePasswordLogin")
        self.add_task(OrchestrationTask(host, "sshEnablePasswordLogin"))

    def add_vsftpdBackdoor(self, host: str):
        self.print_addvuln(host, "vsftpdBackdoor")
        self.add_task(OrchestrationTask(host, "vsftpd234Backdoor"))

    def add_weakUserPassword(self, host: str, user: str):
        self.print_addvuln(host, "weakUserPassword")
        vuln = OrchestrationTask(host, "weakUserPassword")
        vuln.set_params({'user': user})
        self.add_task(vuln)

    def add_writeablePassword(self, host: str):
        self.print_addvuln(host, "writeablePassword")
        self.add_task(OrchestrationTask(host, "writeablePasswd"))

    def add_writeableSudoers(self, host: str):
        self.print_addvuln(host, "writeableSudoers")
        self.add_task(OrchestrationTask(host, "writeableSudoers"))